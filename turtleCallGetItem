local args = { ... }


function getPeripheral (name)
	for i = 1, #peripheral.getNames() do
		if peripheral.getType(peripheral.getNames()[i]) == name then
			return peripheral.getNames()[i]
		end
	end
end

function getUniqueHostName ()

	local i = 1
	
	repeat
		local h = 1
		hostName = "host"..tostring(i)
		i = i+1
		
		rednet.open(getPeripheral("modem"))
		h = rednet.lookup(tostring(hostName))
		rednet.close(getPeripheral("modem"))
		
	until h == nil

	return tostring(hostName)
end

function startHost ()

	local hostName = getUniqueHostName()
	
	rednet.open(getPeripheral("modem"))
	rednet.host(hostName, hostName)
	rednet.close(getPeripheral("modem"))
	
	return tostring(hostName)
end

function endHost (hostName)
	rednet.open(getPeripheral("modem"))
	rednet.unhost(hostName,hostName)
	rednet.close(getPeripheral("modem"))
end

function send (id, msg, protocol,...)

	local modem = getPeripheral("modem")
	local lookup = nil
	local sProt = nil
	local rProt = nil
	
	if select(1,...) ~= nil then lookup = select(1,...) end
	if select(2,...) ~= nil then sProt = select(2,...) end
	if select(3,...) ~= nil then rProt = select(3,...) end
	
	rednet.open(modem)
	if lookup ~= nil then id = tonumber(rednet.lookup(lookup, lookup)) end
	local rid = tonumber(os.getComputerID())
	
	rednet.send(tonumber(id), {id = tonumber(rid), sProt = tostring(sProt), rProt = tostring(rProt), msg = msg}, tostring(protocol))
	rednet.close(modem)

end

function receive (protocol)

	local modem = getPeripheral("modem")
	local id = 0
	local msg = {}
	local p = ""
	
	repeat
		rednet.open(modem)
		id, msg, p = rednet.receive()
		rednet.close(modem)
		
		if p == "dns" then
			rednet.open(modem)
			rednet.send(tonumber(id), tostring(os.getComputerID()), tostring(p))
			rednet.close(modem)		
		end
		
	until p == protocol
	
	return msg
end

local chest = peripheral.wrap(getPeripheral("ender_chest"))
local getItemProt = "getItem"
local giveItemProt = "giveItem"
local wiredProt = "wired"
local wiredToWirelessId = 0


function init ()

end

function shutdown ()

end

function main ()
	
	if #args < 2 then return end

	if #args > 3 then return end

	init()
	
	local id = 0
	local msg = {}
	local dist = 0
	local protocol = ""
	local bool = false
	local openConnection = {cmd = "openConnection"}
	local frequency = 0
	local amount = 0
	local itemName = args[1]
	local slot = tonumber(args[2])
	local hostName = ""
	
	if args[3] == nil then
		amount = 1
	else
		amount = tonumber(args[3])
	end

	if turtle.getItemCount(slot) > 0 then return end

	local request = {cmd = "getItem", itemName = itemName, amount = amount}
	local closeConnection = {cmd = "closeConnection"}
	
	print(giveItemProt)
	
	hostName = startHost()
	send(0, openConnection, giveItemProt, wiredProt, getItemProt, hostName)

	
	repeat
		msg = receive(getItemProt)
	until msg.msg.frequency ~= 0
	endHost(hostName)
	
	chest.setFrequency(frequency)
	
	hostName = startHost()
	send(0, request, giveItemProt, wiredProt, getItemProt, hostName)
	
	repeat
		msg = receive(getItemProt)
		
		if type(msg.msg) ~= "table" then msg.msg = {sent = false} end
		
		if msg.msg.sent == nil then msg.msg = {sent = false} end

	until msg.msg.sent == true
	endHost(hostName)
	
	turtle.select(slot)
	turtle.suckDown(amount)
	chest.setFrequency(0)
	
	send(0, closeConnection, giveItemProt, wiredProt, getItemProt)
	
	shutdown()
end

main()