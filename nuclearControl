local reactor = peripheral.wrap("back")

function coolDownMode ()
	redstone.setOutput("back", false)
	redstone.setOutput("right", false)
	redstone.setOutput("top", false)
	redstone.setOutput("left", true)
	return "COOLDOWN"
end

function energyMode ()
	redstone.setOutput("back", true)
	redstone.setOutput("right", false)
	redstone.setOutput("top", true)
	redstone.setOutput("left", false)
	return "ENERGY"
end

function shutDownMode ()
	redstone.setOutput("back", false)
	redstone.setOutput("right", true)
	redstone.setOutput("top", false)
	redstone.setOutput("left", true)
	return "SHUTDOWN"
end

function display (reactor, mode)
	term.clear()
	print("Current Temperature: ", reactor.getHeat())
	print("Max Temperature: ", reactor.getMaxHeat())
	print("Shutdown Temperature: ", reactor.getMaxHeat() / 5)
	print("System State: ", mode)
end


while true do
	local temp = reactor.getHeat()
	local maxTemp = reactor.getMaxHeat()
	local shutDownTemp = maxTemp / 5
	local invSize = reactor.getInventorySize()
	
	display(reactor, energyMode())
	
	-- Lock into cool down mode if  temp is to high until temp is 0
	if temp > shutDownTemp then
		while reactor.getHeat() > 1 do
			display(reactor, coolDownMode())
			os.sleep(10)
		end
		display(reactor, energyMode())
	end
	
	for i = 1, invSize do
		local item = reactor.getStackInSlot(i)
		if item ~= nil then
			--Check parts dmg, if any is too high send system into cool down mode
			if item["dmg"]/item["max_dmg"] > .5 and item["name"] ~= "reactorUraniumQuad" then
				while reactor.getStackInSlot(i)["dmg"]/item["max_dmg"] > .05 do
					display(reactor, coolDownMode())
					os.sleep(10)
				end
				display(reactor, energyMode())
			end
			
			--Check fuel rod dmg, if dmg is too high shut down 
			if item["dmg"]/item["max_dmg"] > .95 and item["name"] == "reactorUraniumQuad" then
				while reactor.getStackInSlot(i)["dmg"]/item["max_dmg"] > .95 do
					display(reactor, shutDownMode())
					os.sleep(10)
				end
				display(reactor, energyMode())
			end
		end
	end
	os.sleep(5)
end