
function getPeripheral (name)
	for i = 1, #peripheral.getNames() do
		if peripheral.getType(peripheral.getNames()[i]) == name then
			return peripheral.getNames()[i]
		end
	end
end

local chest = peripheral.wrap(getPeripheral("ender_chest"))
local modem = getPeripheral("modem")
local getItemId = 0
local homeFrequency = 1
local beginFrequency = 2
local frequencies = {os.getComputerID()}
local busy = false

function init ()
	
	local id = 0
	local msg = ""
	
	print("Initializing")
	
	while msg ~= "getItemId" do
		rednet.open(modem)
		id, msg = rednet.receive()
		rednet.close(modem)
	end
	
	rednet.open(modem)
	rednet.send(id, "received")
	rednet.close(modem)
	
	getItemId = id
	chest.setFrequency(homeFrequency)
	
	print("Initialization complete")
end

function shutdown ()

end

function getFrequency (id)
	
	local f = 0
	
	for i = beginFrequency, #frequencies do
		if frequencies[i] == nil then
			frequencies[i] = id
			f = i
			break
		end
	end
	
	if f == 0 then
		frequencies[#frequencies+1] = id
		f = #frequencies
	end
	
	rednet.open(modem)
	rednet.send(getItemId, f)
	rednet.close(modem)
	
end

function releaseFrequency (id)

	local bool = false
	
	for i = beginFrequency, #frequencies do
		if frequencies[i] == id then
			frequencies[i] = nil
			bool = true
			break
		end
	end
	
	rednet.open(modem)
	rednet.send(getItemId, bool)
	rednet.close(modem)
	
end

function openFrequency (id)
	
	if busy then
		rednet.open(modem)
		rednet.send(a, "busy")
		rednet.close(modem)
	else
		for i = beginFrequency, #frequencies do
			if frequencies[i] == id then
				chest.setFrequency(i)
				
				busy = true
				
				--Send true reply if frequency opened succesfully
				rednet.open(modem)
				rednet.send(getItemId, true)
				rednet.close(modem)
		
			end
		end
		
		--Reply with false signal if no frequency opened
		rednet.open(modem)
		rednet.send(getItemId, false)
		rednet.close(modem)
	end
end

function closeFrequency (id)

	for i = beginFrequency, #frequencies do
		if frequencies[i] == id then
			chest.setFrequency(homeFrequency)
			busy = false
			
			--Send true reply if frequency closed succesfully
			rednet.open(modem)
			rednet.send(getItemId, true)
			rednet.close(modem)	
			
		end
	end
	
	--Reply with false signal if no frequency closed
	rednet.open(modem)
	rednet.send(getItemId, false)
	rednet.close(modem)
end

function main ()

	init()
	
	while true do

		local id = 0
		local msg = ""
		local f = 0
		
		rednet.open(modem)
		id, msg = rednet.receive()
		rednet.close(modem)
		
		if id == getItemId and msg.cmd == "getFrequency" then
			getFrequency(msg.id)
		elseif id == getItemId and msg.cmd == "releaseFrequency" then
			releaseFrequency(msg.id)
		elseif id == getItemId and msg.cmd == "openFrequency" then
			openFrequency(msg.id)
		elseif id == getItemId and msg.cmd == "closeFrequency" then
			closeFrequency(msg.id)
		end
		
		chest.setFrequency(homeFrequency)
		
	end

	shutdown()
end

main()